package com.fintracker.in;

import com.fintracker.core.exception.ExitFromFinanceModuleException;
import com.fintracker.core.model.Transaction;
import com.fintracker.core.model.TransactionType;
import com.fintracker.core.model.User;
import com.fintracker.out.AnalyticsService;
import com.fintracker.core.service.BudgetService;
import com.fintracker.core.service.GoalService;
import com.fintracker.core.service.TransactionService;
import com.fintracker.out.NotificationService;

import java.time.LocalDate;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

/**
 * –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏, –±—é–¥–∂–µ—Ç–æ–º, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —Ü–µ–ª—è–º–∏ –∏ –æ—Ç—á–µ—Ç–∞–º–∏.
 */
public class TransactionConsoleHandler {
    private final TransactionService transactionService;
    private final BudgetService budgetService;
    private final GoalService goalService;
    private final AnalyticsService analyticsService;
    private final NotificationService notificationService;
    Scanner scanner = new Scanner(System.in);
    private User currentUser;

    /**
     * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–ª–∞—Å—Å–∞ TransactionConsoleHandler.
     *
     * @param transactionService  —Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏
     * @param budgetService       —Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—é–¥–∂–µ—Ç–æ–º
     * @param goalService         —Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —Ü–µ–ª—è–º–∏
     * @param analyticsService    —Å–µ—Ä–≤–∏—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏–∑–∞
     * @param notificationService —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
     */
    public TransactionConsoleHandler(TransactionService transactionService, BudgetService budgetService, GoalService goalService, AnalyticsService analyticsService, NotificationService notificationService) {
        this.transactionService = transactionService;
        this.budgetService = budgetService;
        this.goalService = goalService;
        this.analyticsService = analyticsService;
        this.notificationService = notificationService;
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ—Å—è—á–Ω—ã–π –±—é–¥–∂–µ—Ç –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     */

    private void handleSetBudget() {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –º–µ—Å—è—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞: ");
        double amount = Double.parseDouble(scanner.nextLine());
        budgetService.setBudget(currentUser, amount);
    }

    /**
     * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Ü–µ–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     */

    private void handleSetGoal() {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞–∫–æ–ø–∏—Ç—å: ");
        double amount = Double.parseDouble(scanner.nextLine());
        goalService.setGoal(currentUser, amount);
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ü–µ–ª–∏.
     */

    private void handleCheckGoal() {
        double remaining = goalService.getRemainingAmount(currentUser);
        if (remaining <= 0) {
            System.out.println("–í—ã —É–∂–µ –¥–æ—Å—Ç–∏–≥–ª–∏ —Å–≤–æ–µ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ü–µ–ª–∏! üéâ");
        } else {
            System.out.println("–û—Å—Ç–∞–ª–æ—Å—å –Ω–∞–∫–æ–ø–∏—Ç—å: " + remaining);
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     */

    private void handleAddTransaction() {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É: ");
        double amount = Double.parseDouble(scanner.nextLine());
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ");
        String category = scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ì–ì–ì–ì-–ú–ú-–î–î: ");
        LocalDate date = LocalDate.parse(scanner.nextLine());
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ");
        String description = scanner.nextLine();
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø INCOME/EXPENSE: ");
        TransactionType type = TransactionType.valueOf(scanner.nextLine().toUpperCase());
        Transaction transaction = new Transaction(amount, category, date, description, type);
        transactionService.createTransaction(currentUser, transaction);
        System.out.println("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");
    }

    /**
     * –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é.
     */

    private void handleEditTransaction() {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å: ");
        String id = scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É: ");
        double amount = Double.parseDouble(scanner.nextLine());
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: ");
        String category = scanner.nextLine();
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –¥–∞—Ç—É –ì–ì–ì–ì-–ú–ú-–î–î: ");
        LocalDate date = LocalDate.parse(scanner.nextLine());
        System.out.println("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ");
        String description = scanner.nextLine();
        System.out.println("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–∏–ø INCOME/EXPENSE: ");
        TransactionType type = TransactionType.valueOf(scanner.nextLine().toUpperCase());
        Transaction transaction = new Transaction(amount, category, date, description, type);
        transactionService.editTransaction(id, transaction);
        System.out.println("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞!");
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
     */

    private void handleDeleteTransaction() {
        System.out.println("–í–≤–µ–¥–∏—Ç–µ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: ");
        String id = scanner.nextLine();
        if (transactionService.deleteTransaction(id)) {
            System.out.println("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞!");
        } else {
            System.out.println("–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
        }
    }

    /**
     * –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     */

    private void handleListTransaction() {
        System.out.println("–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ");
        for (Transaction transaction : transactionService.listTransactions()) {
            System.out.println(transaction);
        }
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç.
     */

    private void handleGenerateReport() {
        analyticsService.generateReport();
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
     */

    private void handleNotifications() {
        System.out.println("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:");
        List<String> notifications = notificationService.getNotifications();
        if (notifications.isEmpty()) {
            System.out.println("–ù–µ—Ç –Ω–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.");
        } else {
            notifications.forEach(System.out::println);
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Å–æ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param currentUser —Ç–µ–∫—É—â–∏–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
     */
    public void start(User currentUser) {
        this.currentUser = currentUser;
        while (true) {
            System.out.println("\n–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É(" +
                    "1 - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±—é–¥–∂–µ—Ç," +
                    "2 - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª—å," +
                    "3 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è," +
                    "\n4 - –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞–∑–∞–∫—Ü–∏—é," +
                    "5 - –∏–∑–º–µ–Ω–∏—Ç—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é," +
                    "6 - —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞–∑–∞–∫—Ü–∏—é," +
                    "\n7 - —Å–ø–∏—Å–æ–∫ —Ç—Ä–∞–∑–∞–∫—Ü–∏–π," +
                    "8 - —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç," +
                    "9 - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è," +
                    "10 - –≤—ã–π—Ç–∏): ");
            processCommands(transactionCommands());
        }
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã.
     *
     * @param commands —Å–ª–æ–≤–∞—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ –¥–µ–π—Å—Ç–≤–∏–π
     */

    private void processCommands(Map<String, Runnable> commands) {
        String command = scanner.nextLine();
        commands.getOrDefault(command, () -> System.out.println("–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")).run();
    }

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞—Ä—Ç—É –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏.
     *
     * @return –∫–∞—Ä—Ç–∞ –∫–æ–º–∞–Ω–¥
     */

    private Map<String, Runnable> transactionCommands() {
        Map<String, Runnable> command = new HashMap<>();
        command.put("1", this::handleSetBudget);
        command.put("2", this::handleSetGoal);
        command.put("3", this::handleCheckGoal);
        command.put("4", this::handleAddTransaction);
        command.put("5", this::handleEditTransaction);
        command.put("6", this::handleDeleteTransaction);
        command.put("7", this::handleListTransaction);
        command.put("8", this::handleGenerateReport);
        command.put("9", this::handleNotifications);
        command.put("10", () -> {
            System.out.println("–í—ã—Ö–æ–¥ –∏–∑ –º–æ–¥—É–ª—è —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏...");
            throw new ExitFromFinanceModuleException();
        });
        return command;

    }
}

